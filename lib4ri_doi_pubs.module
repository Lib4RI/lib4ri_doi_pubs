<?php

/**
 * Implements hook_menu().
 */
function lib4ri_doi_pubs_menu() {
    $items = array();
    
    $items['admin/islandora/lib4ri_doi_pubs'] = array(
        'title' => 'DOI publications collections configuration',
        'description' => 'Select the staging and default live collections',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('lib4ri_doi_pubs_admin_form'),
        'access arguments' => array('administer site configuration'),
        'file' => 'includes/forms.inc',
    );
    
    $items['islandora/object/%islandora_object/manage/object/doimigrate'] = array(
        'title' => 'Migrate this Object to another collection',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('lib4ri_doi_pubs_migrate_form', 2),
        'type' => MENU_CALLBACK,
        'file' => 'includes/forms.inc',
        'access callback' => 'islandora_basic_collection_share_migrate_access',
        'access arguments' => array(2),
    );

return $items;
}

/**
 * Implements hook_block_info().
 */
function lib4ri_doi_pubs_block_info() {
    return array(
        'lib4ridora_recent_additions' => array(
            'info' => t('Lib4RI DOI Recent Additions'),
            'cache' => DRUPAL_NO_CACHE,
        ),
        'lib4ri_doi_pubs' => array(
            // The name that will appear in the block list.
            'info' => t('Lib4RI DOI pubs migrate'),
            // Default setting.
            'cache' => DRUPAL_NO_CACHE,
            'region' => 'sidebar_second',
            'status' => 1,
        ),
    );
}

/**
 * Implements hook_block_view().
 */
function lib4ri_doi_pubs_block_view($delta) {
    $block = array();
    switch ($delta) {
        
        case 'lib4ridora_recent_additions':
            module_load_include('inc', 'lib4ridora', 'includes/block');
            $block['subject'] = t('Recent Additions');
            $block['content'] = array(
                '#theme' => 'lib4ri_doi_pubs_citation_solr_results',
                '#citations' => lib4ridora_get_recent_additions(),
            );
            break;
            
        case 'lib4ri_doi_pubs':
            $object = menu_get_object('islandora_object', 2);
            module_load_include('inc', 'lib4ri_doi_pubs', '/includes/functions');
            if (isDoiUnpublished($object)){
                $block['content'] = t('<font color="red"> Unreleased DOI publication </font>');
                $query = array('id' => $object->id,
                    'destination' => current_path(),);
                
                $link = '<div class="buttonized_doi_publish_link">'.l('Release','islandora/object/'.$object->id.'/manage/object/doimigrate', array('query' => $query)).'</div>';
                $block['content'] .= $link;
            }
            break;
            
    }
    return $block;
}

/**
 * Implements hook_block_configure().
 */
function lib4ri_doi_pubs_block_configure($delta) {
    switch ($delta) {
        case 'lib4ridora_recent_additions':
            module_load_include('inc', 'lib4ridora', 'includes/block');
            return lib4ridora_recent_additions_block_configuration_form();
            
        default:
            break;
    }
}
/**
 * Implements hook_theme().
 *
 */
function lib4ri_doi_pubs_theme($existing, $type, $theme, $path) {
    return array(
        'lib4ri_doi_pubs_citation_solr_results' => array(
            'template' => 'theme/lib4ri-doi-pubs-citation-solr-results',
            'variables' => array(
                'citations' => NULL,
            ),
            'file' => 'theme/theme.inc',
        ),
    );
}